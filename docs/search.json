[
  {
    "objectID": "inspect.html",
    "href": "inspect.html",
    "title": "Initial Data Inspect",
    "section": "",
    "text": "Display codepacman::p_load(dplyr,purrr,tidyr,here, haven,tibble,ggplot2,ggh4x,lme4,knitr,gt,flextable,ggh4x,psych,corrplot)\noptions(digits=2, scipen=999, dplyr.summarise.inform=FALSE)\n\ndraw &lt;- readRDS(here(\"data\",\"draw.rds\"))\ndinst &lt;- readRDS(here(\"data\",\"dinst.rds\"))\n\n\n# Attari Energy Survey (Part 1)\naes1 &lt;- draw |&gt; select(id,ATT01:ATT18)\naes2 &lt;- dinst |&gt; select(id,ATT01:ATT18)\n\natt_useSave &lt;- draw |&gt; select(id,ATT19:ATT33)\natt_useSave2 &lt;- dinst |&gt; select(id,ATT19:ATT33)\n\n\nels1 &lt;- draw |&gt; select(id,ELS01:ELS08)\nels2 &lt;- dinst |&gt; select(id,ELS01:ELS08)\n\nrecs1 &lt;- draw |&gt; select(id,RECS01:RECS16)\nrecs2 &lt;- dinst |&gt; select(id,RECS01:RECS16)\n\nlss1_1 &lt;- draw |&gt; select(id,LAN01:LAN09)\nlss1_2 &lt;- dinst |&gt; select(id,LAN01:LAN09)\n\nlss2_1 &lt;- draw |&gt; select(id,LAN10:LAN87)\nlss2_2 &lt;- dinst |&gt; select(id,LAN10:LAN87)\n\n\nnep1 &lt;- draw |&gt; select(id,NEP01:NEP15)\nnep2 &lt;- dinst |&gt; select(id,NEP01:NEP15)\n\ndemo1 &lt;- draw |&gt; select(id,DEM01:DEM30)\ndemo2 &lt;- dinst |&gt; select(id,DEM01:DEM30)\n\n\nrs1 &lt;- draw |&gt; select(id,RS01:RS06)\nrs2 &lt;- dinst |&gt; select(id,RS01:RS06)\n\n\nAttari Energy Survey (Part 1)\n\n\nA. Perceived Difficulty Items (ATT01-ATT15):\n\n\nDescription: Measures how easy or hard it would be for participants to make various changes related to energy usage. Items are phrased as actions such as buying a fuel-efficient car, or changing light bulbs.\n\nCoding Scheme:\n\n1 = “Do it already”\n2 = “Extremely easy”\n3 = “Very easy”\n4 = “Somewhat easy”\n5 = “Neither easy nor hard”\n6 = “Somewhat hard”\n7 = “Very hard”\n8 = “Extremely hard”\n9 = “Not applicable”\n\n\n\nSpecific Items:\n\nATT01: Buying a more fuel-efficient automobile\nATT02: Carpooling with one other person to work\nATT03: Replacing poorly insulated windows\nATT04: Cutting highway speed\nATT05: More efficient heating unit\nATT06: Turning down the thermostat in the day and night\nATT07: Turning up the thermostat on air conditioner in the summer\nATT08: Tuning up the car twice a year\nATT09: Replacing incandescent bulbs with CFLs\nATT10: Turning up the refrigerator thermostat\nATT11: Turning down the freezer thermostat\nATT12: Drying clothes on a clothes line\nATT13: Watching less TV\nATT14: Installing a more efficient washer\nATT15: Changing washer temperature settings\n\n\n\n\n\nB. Numeracy Questions (ATT16-ATT18):\n\n\nDescription: Measures numerical literacy through probability questions.\n\nCoding Scheme: Text box entry where participants are asked to enter numeric answers with no other text. Correct answers are below.\n\nSpecific Items:\n\nATT16: Probability of coin flips (correct answer: 500)\nATT17: Probability of winning lottery (correct answer: 10)\nATT18: Percentage of winning car sweepstakes (correct answer: 0.1%)\n\n\n\n\n\nhead(aes1) |&gt; kable() | id| ATT01| ATT02| ATT03| ATT04| ATT05| ATT06| ATT07| ATT08| ATT09| ATT10| ATT11| ATT12| ATT13| ATT14| ATT15| ATT16| ATT17| ATT18| |–:|—–:|—–:|—–:|—–:|—–:|—–:|—–:|—–:|—–:|—–:|—–:|—–:|—–:|—–:|—–:|—–:|—–:|—–:| | 1| 6| 3| 5| 6| 6| 5| 5| 5| 4| 2| 5| 3| 5| 5| 4| 500| 10| 0.1| | 2| 7| 2| 5| 1| 7| 1| 1| 4| 4| 4| 5| 1| 7| 1| 1| 500| 10| 0.1| | 3| 7| 6| 8| 6| 8| 6| 8| 6| 5| 7| 5| 7| 5| 4| 6| 900| 250| 350.0| | 4| 6| 5| 7| 3| 6| 1| 1| 5| 1| 2| 6| 1| 1| 1| 1| 500| 100| 10.0| | 5| 5| 6| 4| 5| 4| 5| 6| 6| 5| 4| 5| 6| 4| 5| 4| 500| 10| 0.1| | 6| 6| 4| 6| 2| 8| 1| 1| 3| 1| 5| 3| 3| 6| 1| 5| 500| 10| 0.1|\n\nDisplay codeaes_combined &lt;- bind_rows(aes1, aes2)\n\ndiff_items &lt;- aes_combined %&gt;% \n  select(id, ATT01:ATT15)\n\ndiff_items_clean &lt;- diff_items %&gt;%\n  mutate(across(ATT01:ATT15, ~ ifelse(. == 9, NA, .)))\n\npd_alpha &lt;- psych::alpha(diff_items_clean %&gt;% select(-id), check.keys = TRUE)\npd_alpha\n\n\nReliability analysis   \nCall: psych::alpha(x = diff_items_clean %&gt;% select(-id), check.keys = TRUE)\n\n  raw_alpha std.alpha G6(smc) average_r S/N    ase mean  sd median_r\n      0.84      0.84    0.86      0.26 5.3 0.0098  3.9 1.1     0.24\n\n    95% confidence boundaries \n         lower alpha upper\nFeldt     0.82  0.84  0.86\nDuhachek  0.82  0.84  0.86\n\n Reliability if an item is dropped:\n      raw_alpha std.alpha G6(smc) average_r S/N alpha se var.r med.r\nATT01      0.84      0.84    0.86      0.27 5.2   0.0099 0.021  0.26\nATT02      0.84      0.85    0.87      0.28 5.5   0.0096 0.019  0.28\nATT03      0.83      0.83    0.85      0.27 5.0   0.0102 0.020  0.26\nATT04      0.83      0.83    0.86      0.26 5.0   0.0104 0.021  0.24\nATT05      0.83      0.84    0.85      0.27 5.1   0.0101 0.020  0.27\nATT06      0.82      0.83    0.85      0.25 4.8   0.0108 0.019  0.23\nATT07      0.82      0.83    0.85      0.26 4.8   0.0107 0.021  0.23\nATT08      0.83      0.83    0.85      0.26 4.9   0.0105 0.021  0.23\nATT09      0.82      0.83    0.85      0.25 4.8   0.0107 0.018  0.23\nATT10      0.82      0.82    0.85      0.25 4.7   0.0108 0.020  0.23\nATT11      0.84      0.84    0.87      0.28 5.4   0.0096 0.020  0.28\nATT12      0.83      0.83    0.86      0.26 5.0   0.0103 0.021  0.24\nATT13      0.83      0.83    0.86      0.26 5.0   0.0104 0.022  0.23\nATT14      0.82      0.83    0.85      0.25 4.7   0.0107 0.018  0.23\nATT15      0.82      0.83    0.85      0.25 4.7   0.0107 0.017  0.23\n\n Item statistics \n        n raw.r std.r r.cor r.drop mean  sd\nATT01 573  0.46  0.45  0.39   0.35  4.9 2.1\nATT02 532  0.35  0.35  0.27   0.24  5.0 2.0\nATT03 574  0.53  0.52  0.49   0.44  5.2 2.0\nATT04 573  0.55  0.56  0.51   0.46  3.7 2.0\nATT05 568  0.51  0.50  0.47   0.41  5.3 2.1\nATT06 578  0.66  0.64  0.62   0.56  3.4 2.2\nATT07 575  0.63  0.62  0.60   0.54  3.8 2.3\nATT08 586  0.59  0.60  0.56   0.51  3.5 1.8\nATT09 586  0.64  0.65  0.63   0.56  2.9 1.9\nATT10 586  0.67  0.68  0.66   0.60  3.2 1.8\nATT11 586  0.37  0.36  0.28   0.26  4.7 2.0\nATT12 586  0.54  0.54  0.49   0.45  3.4 2.0\nATT13 586  0.57  0.56  0.52   0.47  4.3 2.3\nATT14 586  0.65  0.65  0.64   0.57  2.7 1.9\nATT15 586  0.65  0.66  0.66   0.58  2.7 1.8\n\nNon missing response frequency for each item\n         1    2    3    4    5    6    7    8 miss\nATT01 0.10 0.07 0.09 0.17 0.07 0.25 0.14 0.11 0.02\nATT02 0.04 0.09 0.10 0.20 0.11 0.19 0.14 0.13 0.09\nATT03 0.08 0.04 0.08 0.17 0.08 0.28 0.14 0.13 0.02\nATT04 0.12 0.23 0.17 0.16 0.09 0.12 0.07 0.05 0.02\nATT05 0.07 0.05 0.08 0.14 0.11 0.22 0.19 0.15 0.03\nATT06 0.30 0.13 0.12 0.15 0.05 0.11 0.07 0.05 0.01\nATT07 0.22 0.12 0.15 0.11 0.10 0.14 0.09 0.07 0.02\nATT08 0.20 0.11 0.18 0.22 0.10 0.15 0.02 0.02 0.00\nATT09 0.34 0.16 0.16 0.14 0.06 0.08 0.03 0.02 0.00\nATT10 0.19 0.22 0.21 0.16 0.10 0.08 0.03 0.02 0.00\nATT11 0.10 0.07 0.10 0.17 0.11 0.24 0.13 0.07 0.00\nATT12 0.22 0.15 0.19 0.16 0.09 0.10 0.04 0.04 0.00\nATT13 0.22 0.06 0.10 0.10 0.11 0.24 0.11 0.06 0.00\nATT14 0.37 0.19 0.15 0.10 0.09 0.05 0.03 0.02 0.00\nATT15 0.31 0.27 0.16 0.09 0.07 0.07 0.02 0.02 0.00\n\nDisplay codeitem_stats &lt;- diff_items_clean %&gt;%\n  select(-id) %&gt;%\n  summarise(across(everything(), \n                   list(Mean = ~ mean(.x, na.rm = TRUE),\n                        SD   = ~ sd(.x, na.rm = TRUE),\n                        N    = ~ sum(!is.na(.x))))) \n\nitem_stats_long &lt;- tidyr::pivot_longer(item_stats,\n                                       cols = everything(),\n                                       names_to = c(\"Item\", \".value\"),\n                                       names_pattern = \"(ATT\\\\d+)_([^_]+)$\")\nitem_stats_long\n\n# A tibble: 15 × 4\n   Item   Mean    SD     N\n   &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt;\n 1 ATT01  4.87  2.14   573\n 2 ATT02  4.98  2.01   532\n 3 ATT03  5.16  2.02   574\n 4 ATT04  3.74  2.01   573\n 5 ATT05  5.33  2.05   568\n 6 ATT06  3.39  2.23   578\n 7 ATT07  3.83  2.27   575\n 8 ATT08  3.54  1.84   586\n 9 ATT09  2.87  1.88   586\n10 ATT10  3.22  1.81   586\n11 ATT11  4.75  2.05   586\n12 ATT12  3.41  2.00   586\n13 ATT13  4.29  2.30   586\n14 ATT14  2.73  1.88   586\n15 ATT15  2.73  1.79   586\n\nDisplay codenumeracy_scored &lt;- aes_combined %&gt;%\n  mutate(\n    ATT16_correct = ifelse(ATT16 == 500, 1, 0),\n    ATT17_correct = ifelse(ATT17 == 10, 1, 0),\n    # Note: Some participants might enter 0.1, 0.1%, or 0.001 (depending on instructions).\n    # Adjust the condition accordingly:\n    ATT18_correct = ifelse(ATT18 == 0.1, 1, 0)\n  )\n\nnumeracy_scored %&gt;%\n  summarise(across(c(ATT16_correct, ATT17_correct, ATT18_correct), mean, na.rm=TRUE)) \n\n# A tibble: 1 × 3\n  ATT16_correct ATT17_correct ATT18_correct\n          &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;\n1         0.811         0.756         0.232\n\nDisplay code# version of plot where each question has it's own facet, with the question text as the facet label: \ndiff_items_clean_long &lt;- diff_items_clean %&gt;%\n  pivot_longer(cols = ATT01:ATT15, names_to = \"Item\", values_to = \"Response\") %&gt;%\n  mutate(Item = recode(Item, !!!setNames(c(\n    \"ATT01\" = \"Buying a more fuel-efficient automobile\",\n    \"ATT02\" = \"Carpooling with one other person to work\",\n    \"ATT03\" = \"Replacing poorly insulated windows\",\n    \"ATT04\" = \"Cutting highway speed\",\n    \"ATT05\" = \"More efficient heating unit\",\n    \"ATT06\" = \"Turning down the thermostat in the day and night\",\n    \"ATT07\" = \"Turning up the thermostat on air conditioner in the summer\",\n    \"ATT08\" = \"Tuning up the car twice a year\",\n    \"ATT09\" = \"Replacing incandescent bulbs with CFLs\",\n    \"ATT10\" = \"Turning up the refrigerator thermostat\",\n    \"ATT11\" = \"Turning down the freezer thermostat\",\n    \"ATT12\" = \"Drying clothes on a clothes line\",\n    \"ATT13\" = \"Watching less TV\",\n    \"ATT14\" = \"Installing a more efficient washer\",\n    \"ATT15\" = \"Changing washer temperature settings\"\n  ), c(\"ATT01\", \"ATT02\", \"ATT03\", \"ATT04\", \"ATT05\", \"ATT06\", \"ATT07\", \"ATT08\", \"ATT09\", \"ATT10\", \"ATT11\", \"ATT12\", \"ATT13\", \"ATT14\", \"ATT15\"))))\n\nggplot(diff_items_clean_long, aes(x = Response)) +\n    geom_histogram(binwidth = 1, fill = \"darkgreen\", color = \"black\") +\n    facet_wrap(~Item, scales = \"free_y\") +\n    labs(title = \"Distribution of Perceived Difficulty Items\",\n         x = \"Response (1=Do it already to 8=Extremely hard)\",\n         y = \"Frequency\") +\n    theme_minimal()\n\n\n# correlation matrix plot\ndiff_items_clean %&gt;%\n  select(-id) %&gt;%\n  cor(use = \"pairwise.complete.obs\") %&gt;%\n  corrplot::corrplot(method = \"number\", type = \"upper\", tl.col = \"black\", tl.srt = 45)\n\n\n\n\n\n\nFigure 1\n\n\n\n\n\n\n\n\n\nFigure 2\n\n\n\n\nAttari Energy Survey (Part 2)\n\n\nA. Relative Energy Usage (ATT19-ATT27):\n\n\nDescription: Asks participants to estimate the relative energy usage of various devices compared to a 100-Watt bulb.\n\nCoding Scheme: Numeric entry. Correct answers are indicated in codebook but these can be any response between 0-200.\n\nSpecific Items:\n\nATT19: Compact fluorescent light bulb (correct answer: 27)\nATT20: Desktop computer (correct answer: 140)\nATT21: Laptop computer (correct answer: 48)\nATT22: Stereo (correct answer: 128)\nATT23: Electric clothing dryer (correct answer: 3400)\nATT24: Portable heater (correct answer: 925)\nATT25: Air conditioning unit for a room (correct answer: 1000)\nATT26: Central air conditioning unit (correct answer: 3500)\nATT27: Dishwasher (correct answer: 3400)\n\n\n\n\n\nB. Relative Energy Savings (ATT28-ATT33):\n\n\nDescription: Asks participants to estimate the relative energy savings of various actions compared to turning off a 100-Watt bulb.\n\nCoding Scheme: Numeric entry. Correct answers are indicated in codebook but these can be any response between 0-200.\n\nSpecific Items:\n\nATT28: Replacing 100-Watt bulb with CFL (correct answer: 1800)\nATT29: Replacing 100-watt kitchen bulb with 75-watt bulb (correct answer: 25)\nATT30: Drying clothes on a clothesline (correct answer: 3400)\nATT31: Raising summer air conditioner by 5 F (correct answer: 115)\nATT32: Lowering winter heater by 5 F (correct answer: 546)\nATT33: Changing washer temp settings (correct answer: 4000)\n\n\n\n\n\nhead(att_useSave) # A tibble: 6 × 16 id ATT19 ATT20 ATT21 ATT22 ATT23 ATT24 ATT25 ATT26 ATT27 ATT28 ATT29 ATT30 ATT31 ATT32 ATT33  1 1 50 200 150 80 130 400 800 1200 150 50 25 150 200 250 80 2 2 77 200 185 150 500 200 200 500 350 120 120 400 200 200 200 3 3 100 20 30 40 50 60 70 80 90 6000 4500 2000 210 200 650 4 4 60 1200 900 700 1500 1000 1000 2000 1100 40 25 1500 500 500 400 5 5 120 150 120 200 180 250 280 250 150 75 80 200 180 150 100 6 6 100 200 150 50 400 1300 700 2000 750 90 25 100 200 300 400\n\nDisplay codeatt2_combined &lt;- bind_rows(att_useSave, att_useSave2)\n\n# Inspect structure\n# head(att2_combined)\n\n# -------------------------------------------------------\n# Overview of Items in Part 2\n# -------------------------------------------------------\n# 1) Relative Energy Usage (ATT19 to ATT27)\n# 2) Relative Energy Savings (ATT28 to ATT33)\n\nusage_items &lt;- c(\"ATT19\",\"ATT20\",\"ATT21\",\"ATT22\",\"ATT23\",\"ATT24\",\"ATT25\",\"ATT26\",\"ATT27\")\nsavings_items &lt;- c(\"ATT28\",\"ATT29\",\"ATT30\",\"ATT31\",\"ATT32\",\"ATT33\")\n\n# -------------------------------------------------------\n# Descriptive Statistics (Raw Responses)\n# -------------------------------------------------------\n# Calculate item-level Means, SD, and N for usage and savings\npart2_stats &lt;- att2_combined %&gt;%\n  summarize(\n    across(\n      .cols = all_of(c(usage_items, savings_items)),\n      .fns = list(Mean = ~ mean(.x, na.rm = TRUE),\n                  SD   = ~ sd(.x, na.rm = TRUE),\n                  N    = ~ sum(!is.na(.x)))\n    )\n  )\n\n# Reshape to long format for easier reading\npart2_stats_long &lt;- part2_stats %&gt;%\n  pivot_longer(\n    cols = everything(),\n    names_to = c(\"Item\", \".value\"),\n    names_pattern = \"(ATT\\\\d+)_([^_]+)$\"\n  )\n\npart2_stats_long %&gt;%\n  arrange(Item) %&gt;%\n  knitr::kable(digits = 2)\n\n\n\nItem\nMean\nSD\nN\n\n\n\nATT19\n79\n377\n586\n\n\nATT20\n184\n285\n586\n\n\nATT21\n138\n199\n586\n\n\nATT22\n109\n127\n586\n\n\nATT23\n359\n792\n586\n\n\nATT24\n321\n640\n586\n\n\nATT25\n396\n1192\n586\n\n\nATT26\n682\n3136\n586\n\n\nATT27\n353\n1426\n586\n\n\nATT28\n77\n250\n586\n\n\nATT29\n59\n191\n586\n\n\nATT30\n283\n496\n586\n\n\nATT31\n214\n594\n586\n\n\nATT32\n228\n1085\n586\n\n\nATT33\n146\n258\n586\n\n\n\n\nDisplay code# -------------------------------------------------------\n# Visualization: Distribution of Each Raw Item\n# -------------------------------------------------------\n# Example: histogram facets for all Part 2 items\natt2_long &lt;- att2_combined %&gt;%\n  pivot_longer(cols = usage_items:savings_items, names_to = \"Item\", values_to = \"Response\")\n\n# Optional labeling for clarity in facet titles\nitem_labels &lt;- c(\n  ATT19 = \"CFL vs 100-Watt Bulb\",\n  ATT20 = \"Desktop Computer\",\n  ATT21 = \"Laptop Computer\",\n  ATT22 = \"Stereo\",\n  ATT23 = \"Electric Dryer\",\n  ATT24 = \"Portable Heater\",\n  ATT25 = \"Room AC Unit\",\n  ATT26 = \"Central AC\",\n  ATT27 = \"Dishwasher\",\n  ATT28 = \"Replacing 100W with CFL\",\n  ATT29 = \"Replacing 100W with 75W\",\n  ATT30 = \"Drying Clothes on Line\",\n  ATT31 = \"Raising Summer AC 5F\",\n  ATT32 = \"Lowering Winter Heat 5F\",\n  ATT33 = \"Washer Temp Settings\"\n)\n\natt2_long &lt;- att2_long %&gt;%\n  mutate(Item_Facet = recode(Item, !!!item_labels))\n\nggplot(att2_long, aes(x = Response)) +\n  geom_histogram(binwidth = 50, fill = \"dodgerblue\", color = \"black\") +\n  facet_wrap(~ Item_Facet, scales = \"free\") +\n  labs(\n    title = \"Distribution of Raw Responses (Attari Part 2)\",\n    x = \"Estimated Usage (or Savings)\",\n    y = \"Frequency\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\nDisplay code# -------------------------------------------------------\n# Scoring the Items by Comparing to Correct Answers\n# -------------------------------------------------------\n# Below are the “correct” values from the codebook for each item.\n# (These may vary based on your final instrument or coding.)\n\nusage_key &lt;- c(\n  ATT19 = 27,    # CFL vs 100-Watt Bulb\n  ATT20 = 140,   # Desktop Computer\n  ATT21 = 48,    # Laptop Computer\n  ATT22 = 128,   # Stereo\n  ATT23 = 3400,  # Electric Dryer\n  ATT24 = 925,   # Portable Heater\n  ATT25 = 1000,  # Room AC\n  ATT26 = 3500,  # Central AC\n  ATT27 = 3400   # Dishwasher\n)\n\nsavings_key &lt;- c(\n  ATT28 = 1800,  # Replacing 100W with CFL\n  ATT29 = 25,    # Replacing 100W with 75W\n  ATT30 = 3400,  # Drying Clothes on Line\n  ATT31 = 115,   # Raising Summer AC 5F\n  ATT32 = 546,   # Lowering Winter Heat 5F\n  ATT33 = 4000   # Washer Temp Settings\n)\n\n# Combine into a single named vector\nall_keys &lt;- c(usage_key, savings_key)\n\n# Create absolute and relative error scores\n# (Absolute error = |participant_est - correct|)\n# (Relative error = (participant_est - correct) / correct * 100)\natt2_scored &lt;- att2_combined %&gt;%\n  mutate(across(\n    .cols = names(all_keys),\n    .fns = list(\n      abs_error = ~ abs(. - all_keys[cur_column()]),\n      rel_error = ~ ifelse(all_keys[cur_column()] == 0,\n                           NA_real_,\n                           ((. - all_keys[cur_column()]) / all_keys[cur_column()]) * 100)\n    ),\n    .names = \"{.col}_{.fn}\"\n  ))\n\n# Inspect scoring for the first few rows\n# head(select(att2_scored, id, starts_with(\"ATT19\")))\n\n# -------------------------------------------------------\n# Summaries of Error Scores\n# -------------------------------------------------------\n# Example: Summarize absolute error for usage items\nusage_abs_error_stats &lt;- att2_scored %&gt;%\n  summarize(\n    across(\n      .cols = paste0(usage_items, \"_abs_error\"),\n      .fns = list(Mean = ~ mean(.x, na.rm = TRUE),\n                  Median = ~ median(.x, na.rm = TRUE),\n                  SD = ~ sd(.x, na.rm = TRUE),\n                  N = ~ sum(!is.na(.x)))\n    )\n  )\n\nusage_abs_error_stats_long &lt;- usage_abs_error_stats %&gt;%\n  pivot_longer(\n    cols = everything(),\n    names_to = c(\"Item\", \".value\"),\n    names_pattern = \"(ATT\\\\d+_abs_error)_([^_]+)$\"\n  )\n\nusage_abs_error_stats_long %&gt;%\n  arrange(Item) %&gt;%\n  knitr::kable(digits = 2, caption = \"Absolute Error for Usage Items\")\n\n\nAbsolute Error for Usage Items\n\nItem\nMean\nMedian\nSD\nN\n\n\n\nATT19_abs_error\n57\n26\n376\n586\n\n\nATT20_abs_error\n112\n60\n266\n586\n\n\nATT21_abs_error\n101\n66\n194\n586\n\n\nATT22_abs_error\n76\n68\n104\n586\n\n\nATT23_abs_error\n3095\n3223\n542\n586\n\n\nATT24_abs_error\n738\n758\n480\n586\n\n\nATT25_abs_error\n835\n824\n1044\n586\n\n\nATT26_abs_error\n3253\n3307\n2681\n586\n\n\nATT27_abs_error\n3210\n3248\n1004\n586\n\n\n\n\nDisplay code# Similarly for savings items (relative error, e.g.)\nsavings_rel_error_stats &lt;- att2_scored %&gt;%\n  summarize(\n    across(\n      .cols = paste0(savings_items, \"_rel_error\"),\n      .fns = list(Mean = ~ mean(.x, na.rm = TRUE),\n                  Median = ~ median(.x, na.rm = TRUE),\n                  SD = ~ sd(.x, na.rm = TRUE),\n                  N = ~ sum(!is.na(.x)))\n    )\n  )\n\nsavings_rel_error_stats_long &lt;- savings_rel_error_stats %&gt;%\n  pivot_longer(\n    cols = everything(),\n    names_to = c(\"Item\", \".value\"),\n    names_pattern = \"(ATT\\\\d+_rel_error)_([^_]+)$\"\n  )\n\nsavings_rel_error_stats_long %&gt;%\n  arrange(Item) %&gt;%\n  knitr::kable(digits = 2, caption = \"Relative Error for Savings Items\")\n\n\nRelative Error for Savings Items\n\nItem\nMean\nMedian\nSD\nN\n\n\n\nATT28_rel_error\n-97\n-97\n0\n586\n\n\nATT29_rel_error\n0\n0\n0\n586\n\n\nATT30_rel_error\n-96\n-96\n0\n586\n\n\nATT31_rel_error\n74\n74\n0\n586\n\n\nATT32_rel_error\n-54\n-54\n0\n586\n\n\nATT33_rel_error\n-98\n-98\n0\n586\n\n\n\n\nDisplay code# -------------------------------------------------------\n# Correlations Among Part 2 Items (Raw or Error Scores)\n# -------------------------------------------------------\n# For instance, correlation among the raw usage items:\nusage_cor &lt;- att2_combined %&gt;%\n  select(all_of(usage_items)) %&gt;%\n  cor(use = \"pairwise.complete.obs\")\n\ncorrplot::corrplot(usage_cor, method = \"number\", type = \"upper\", tl.col = \"black\", tl.srt = 45)\ntitle(\"Correlation Matrix: Raw Usage Estimates (ATT19–ATT27)\")\n\n\n\n\n\n\nDisplay code# If you prefer correlation among absolute error scores:\nusage_abs_err_cor &lt;- att2_scored %&gt;%\n  select(ends_with(\"_abs_error\"), -contains(\"rel_error\")) %&gt;%\n  cor(use = \"pairwise.complete.obs\")\n\ncorrplot::corrplot(usage_abs_err_cor, method = \"number\", type = \"upper\", tl.col = \"black\", tl.srt = 45)\n\n\n\n\n\n\nDisplay code#title(\"Correlation Matrix: Usage Absolute Error Scores\")\n\n# -------------------------------------------------------\n# Optional: Reliability Analyses (if treating sets of items as a scale)\n# -------------------------------------------------------\n# Typically, these Attari Part 2 items are not always considered a unidimensional scale,\n# but for illustrative purposes, one might still examine internal consistency:\n\n# Example: usage item reliability (raw responses)\npsych::alpha(att2_combined %&gt;% select(all_of(usage_items)), check.keys = TRUE)\n\n\nReliability analysis   \nCall: psych::alpha(x = att2_combined %&gt;% select(all_of(usage_items)), \n    check.keys = TRUE)\n\n  raw_alpha std.alpha G6(smc) average_r S/N    ase mean  sd median_r\n      0.79      0.88    0.94      0.44 7.1 0.0049 7496 779      0.4\n\n    95% confidence boundaries \n         lower alpha upper\nFeldt     0.76  0.79  0.82\nDuhachek  0.78  0.79  0.80\n\n Reliability if an item is dropped:\n       raw_alpha std.alpha G6(smc) average_r  S/N alpha se var.r med.r\nATT19-      0.81      0.91    0.96      0.57 10.4   0.0047 0.068  0.55\nATT20       0.80      0.87    0.92      0.45  6.6   0.0044 0.116  0.40\nATT21       0.80      0.86    0.93      0.44  6.3   0.0047 0.120  0.40\nATT22       0.80      0.87    0.94      0.46  6.9   0.0048 0.118  0.45\nATT23       0.74      0.85    0.93      0.41  5.5   0.0057 0.112  0.31\nATT24       0.75      0.84    0.92      0.40  5.4   0.0052 0.111  0.31\nATT25       0.70      0.85    0.91      0.41  5.5   0.0072 0.099  0.40\nATT26       0.82      0.85    0.92      0.42  5.9   0.0057 0.101  0.40\nATT27       0.70      0.85    0.92      0.42  5.8   0.0072 0.104  0.40\n\n Item statistics \n         n raw.r std.r r.cor r.drop  mean   sd\nATT19- 586 0.067  0.17 0.015  0.013 64921  377\nATT20  586 0.356  0.67 0.668  0.320   184  285\nATT21  586 0.439  0.72 0.710  0.415   138  199\nATT22  586 0.331  0.62 0.586  0.315   109  127\nATT23  586 0.881  0.86 0.847  0.851   359  792\nATT24  586 0.868  0.89 0.888  0.842   321  640\nATT25  586 0.978  0.86 0.879  0.968   396 1192\nATT26  586 0.963  0.79 0.800  0.885   682 3136\nATT27  586 0.924  0.80 0.801  0.884   353 1426\n\nDisplay code# Similarly for savings items if desired\npsych::alpha(att2_combined %&gt;% select(all_of(savings_items)), check.keys = TRUE)\n\n\nReliability analysis   \nCall: psych::alpha(x = att2_combined %&gt;% select(all_of(savings_items)), \n    check.keys = TRUE)\n\n  raw_alpha std.alpha G6(smc) average_r S/N   ase mean  sd median_r\n      0.69      0.77    0.91      0.36 3.3 0.014  168 356     0.17\n\n    95% confidence boundaries \n         lower alpha upper\nFeldt     0.65  0.69  0.73\nDuhachek  0.66  0.69  0.72\n\n Reliability if an item is dropped:\n      raw_alpha std.alpha G6(smc) average_r S/N alpha se var.r med.r\nATT28      0.71      0.77    0.81      0.40 3.3    0.013 0.096  0.51\nATT29      0.71      0.78    0.82      0.41 3.5    0.013 0.087  0.51\nATT30      0.57      0.70    0.88      0.32 2.4    0.018 0.133  0.12\nATT31      0.61      0.75    0.92      0.38 3.0    0.017 0.135  0.15\nATT32      0.67      0.72    0.87      0.34 2.5    0.019 0.118  0.15\nATT33      0.61      0.68    0.82      0.30 2.1    0.018 0.107  0.15\n\n Item statistics \n        n raw.r std.r r.cor r.drop mean   sd\nATT28 586  0.30  0.58  0.59   0.19   77  250\nATT29 586  0.26  0.54  0.56   0.17   59  191\nATT30 586  0.79  0.77  0.72   0.68  283  496\nATT31 586  0.72  0.63  0.50   0.53  214  594\nATT32 586  0.89  0.73  0.69   0.63  228 1085\nATT33 586  0.90  0.83  0.83   0.87  146  258\n\n\n\nDisplay codeatt2_combined &lt;- bind_rows(att_useSave, att_useSave2)\n\n# -------------------------------------------------------\n# 1. Overview of Items in Part 2\n# -------------------------------------------------------\n# (A) Relative Energy Usage (ATT19 to ATT27)\n# (B) Relative Energy Savings (ATT28 to ATT33)\n\nusage_items   &lt;- c(\"ATT19\",\"ATT20\",\"ATT21\",\"ATT22\",\"ATT23\",\"ATT24\",\"ATT25\",\"ATT26\",\"ATT27\")\nsavings_items &lt;- c(\"ATT28\",\"ATT29\",\"ATT30\",\"ATT31\",\"ATT32\",\"ATT33\")\n\n# -------------------------------------------------------\n# 2. Descriptive Statistics (Raw Responses)\n# -------------------------------------------------------\npart2_stats &lt;- att2_combined %&gt;%\n  summarize(\n    across(\n      .cols = all_of(c(usage_items, savings_items)),\n      .fns = list(\n        Mean = ~ mean(.x, na.rm = TRUE),\n        SD   = ~ sd(.x, na.rm = TRUE),\n        N    = ~ sum(!is.na(.x))\n      )\n    )\n  )\n\npart2_stats_long &lt;- part2_stats %&gt;%\n  pivot_longer(\n    cols = everything(),\n    names_to = c(\"Item\", \".value\"),\n    names_pattern = \"(ATT\\\\d+)_([^_]+)$\"\n  )\n\n# Show table of descriptive statistics\npart2_stats_long %&gt;%\n  arrange(Item) %&gt;%\n  knitr::kable(digits = 2)\n\n\n\nItem\nMean\nSD\nN\n\n\n\nATT19\n79\n377\n586\n\n\nATT20\n184\n285\n586\n\n\nATT21\n138\n199\n586\n\n\nATT22\n109\n127\n586\n\n\nATT23\n359\n792\n586\n\n\nATT24\n321\n640\n586\n\n\nATT25\n396\n1192\n586\n\n\nATT26\n682\n3136\n586\n\n\nATT27\n353\n1426\n586\n\n\nATT28\n77\n250\n586\n\n\nATT29\n59\n191\n586\n\n\nATT30\n283\n496\n586\n\n\nATT31\n214\n594\n586\n\n\nATT32\n228\n1085\n586\n\n\nATT33\n146\n258\n586\n\n\n\n\nDisplay code# -------------------------------------------------------\n# 3. Visualization: Distribution of Each Raw Item\n# -------------------------------------------------------\natt2_long &lt;- att2_combined %&gt;%\n  pivot_longer(\n    cols = all_of(c(usage_items, savings_items)),\n    names_to = \"Item\", \n    values_to = \"Response\"\n  )\n\nitem_labels &lt;- c(\n  ATT19 = \"CFL vs 100-Watt Bulb\",\n  ATT20 = \"Desktop Computer\",\n  ATT21 = \"Laptop Computer\",\n  ATT22 = \"Stereo\",\n  ATT23 = \"Electric Dryer\",\n  ATT24 = \"Portable Heater\",\n  ATT25 = \"Room AC Unit\",\n  ATT26 = \"Central AC\",\n  ATT27 = \"Dishwasher\",\n  ATT28 = \"Replacing 100W with CFL\",\n  ATT29 = \"Replacing 100W with 75W\",\n  ATT30 = \"Drying Clothes on Line\",\n  ATT31 = \"Raising Summer AC 5F\",\n  ATT32 = \"Lowering Winter Heat 5F\",\n  ATT33 = \"Washer Temp Settings\"\n)\n\natt2_long &lt;- att2_long %&gt;%\n  mutate(Item_Facet = recode(Item, !!!item_labels))\n\nggplot(att2_long, aes(x = Response)) +\n  geom_histogram(binwidth = 50, fill = \"dodgerblue\", color = \"black\") +\n  facet_wrap(~ Item_Facet, scales = \"free\") +\n  labs(\n    title = \"Distribution of Raw Responses (Attari Part 2)\",\n    x = \"Estimated Usage (or Savings)\",\n    y = \"Frequency\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\nDisplay code# -------------------------------------------------------\n# 4. Scoring the Items by Comparing to Correct Answers\n# -------------------------------------------------------\n# According to the provided codebook:\nusage_key &lt;- c(\n  ATT19 = 27,    # CFL vs 100-Watt Bulb\n  ATT20 = 140,   # Desktop Computer\n  ATT21 = 48,    # Laptop Computer\n  ATT22 = 128,   # Stereo\n  ATT23 = 3400,  # Electric Dryer\n  ATT24 = 925,   # Portable Heater\n  ATT25 = 1000,  # Room AC\n  ATT26 = 3500,  # Central AC\n  ATT27 = 3400   # Dishwasher\n)\n\nsavings_key &lt;- c(\n  ATT28 = 1800,  # Replacing 100W with CFL\n  ATT29 = 25,    # Replacing 100W with 75W\n  ATT30 = 3400,  # Drying Clothes on Line\n  ATT31 = 115,   # Raising Summer AC 5F\n  ATT32 = 546,   # Lowering Winter Heat 5F\n  ATT33 = 4000   # Washer Temp Settings\n)\n\n# Combine into a single named vector\nall_keys &lt;- c(usage_key, savings_key)\n\n# Compute absolute and relative error\natt2_scored &lt;- att2_combined %&gt;%\n  mutate(across(\n    .cols = names(all_keys),\n    .fns = list(\n      abs_error = ~ abs(. - all_keys[cur_column()]),\n      rel_error = ~ ifelse(all_keys[cur_column()] == 0,\n                           NA_real_,\n                           ((. - all_keys[cur_column()]) / all_keys[cur_column()]) * 100)\n    ),\n    .names = \"{.col}_{.fn}\"\n  ))\n\n# -------------------------------------------------------\n# 5. Summaries of Error Scores\n# -------------------------------------------------------\n# A) Absolute error for usage items\nusage_abs_error_stats &lt;- att2_scored %&gt;%\n  summarize(\n    across(\n      .cols = paste0(usage_items, \"_abs_error\"),\n      .fns = list(\n        Mean   = ~ mean(.x, na.rm = TRUE),\n        Median = ~ median(.x, na.rm = TRUE),\n        SD     = ~ sd(.x, na.rm = TRUE),\n        N      = ~ sum(!is.na(.x))\n      )\n    )\n  )\n\nusage_abs_error_stats_long &lt;- usage_abs_error_stats %&gt;%\n  pivot_longer(\n    cols = everything(),\n    names_to = c(\"Item\", \".value\"),\n    names_pattern = \"(ATT\\\\d+_abs_error)_([^_]+)$\"\n  )\n\nusage_abs_error_stats_long %&gt;%\n  arrange(Item) %&gt;%\n  knitr::kable(digits = 2, caption = \"Absolute Error for Usage Items\")\n\n\nAbsolute Error for Usage Items\n\nItem\nMean\nMedian\nSD\nN\n\n\n\nATT19_abs_error\n57\n26\n376\n586\n\n\nATT20_abs_error\n112\n60\n266\n586\n\n\nATT21_abs_error\n101\n66\n194\n586\n\n\nATT22_abs_error\n76\n68\n104\n586\n\n\nATT23_abs_error\n3095\n3223\n542\n586\n\n\nATT24_abs_error\n738\n758\n480\n586\n\n\nATT25_abs_error\n835\n824\n1044\n586\n\n\nATT26_abs_error\n3253\n3307\n2681\n586\n\n\nATT27_abs_error\n3210\n3248\n1004\n586\n\n\n\n\nDisplay code# B) Relative error for savings items (example)\nsavings_rel_error_stats &lt;- att2_scored %&gt;%\n  summarize(\n    across(\n      .cols = paste0(savings_items, \"_rel_error\"),\n      .fns = list(\n        Mean   = ~ mean(.x, na.rm = TRUE),\n        Median = ~ median(.x, na.rm = TRUE),\n        SD     = ~ sd(.x, na.rm = TRUE),\n        N      = ~ sum(!is.na(.x))\n      )\n    )\n  )\n\nsavings_rel_error_stats_long &lt;- savings_rel_error_stats %&gt;%\n  pivot_longer(\n    cols = everything(),\n    names_to = c(\"Item\", \".value\"),\n    names_pattern = \"(ATT\\\\d+_rel_error)_([^_]+)$\"\n  )\n\nsavings_rel_error_stats_long %&gt;%\n  arrange(Item) %&gt;%\n  knitr::kable(digits = 2, caption = \"Relative Error for Savings Items\")\n\n\nRelative Error for Savings Items\n\nItem\nMean\nMedian\nSD\nN\n\n\n\nATT28_rel_error\n-97\n-97\n0\n586\n\n\nATT29_rel_error\n0\n0\n0\n586\n\n\nATT30_rel_error\n-96\n-96\n0\n586\n\n\nATT31_rel_error\n74\n74\n0\n586\n\n\nATT32_rel_error\n-54\n-54\n0\n586\n\n\nATT33_rel_error\n-98\n-98\n0\n586\n\n\n\n\nDisplay code# -------------------------------------------------------\n# 6. Plot Estimated vs. True Scores (Usage & Savings)\n# -------------------------------------------------------\n# First, put the raw estimates into long format, then merge with correct values\nkeys_df &lt;- tibble(Item = names(all_keys), Correct = all_keys)\n\natt2_est_vs_true &lt;- att2_long %&gt;%\n  left_join(keys_df, by = \"Item\") %&gt;%\n  # For clarity, rename \"Response\" to \"Estimated\"\n  rename(Estimated = Response)\n\n# Scatterplot of estimated vs. true, with facets\nggplot(att2_est_vs_true, aes(x = Correct, y = Estimated,color=Item_Facet)) +\n  geom_point(alpha = 0.6) +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"gray40\") +\n  labs(\n    title = \"Estimated vs. True Scores (Attari Part 2)\",\n    x = \"True Value\",\n    y = \"Estimated Value\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\nDisplay codeggplot(att2_est_vs_true, aes(x = Correct, y = Estimated, color = Item_Facet)) +\n  geom_point(alpha = 0.6) +\n  scale_x_log10() +  # log scale on x-axis\n  scale_y_log10() +  # log scale on y-axis\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"gray40\") +\n  labs(\n    title = \"Estimated vs. True Scores (Log–Log Scale)\",\n    x = \"Log(True Value)\",\n    y = \"Log(Estimated Value)\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\nDisplay codeatt2_est_vs_true &lt;- att2_est_vs_true %&gt;%\n  mutate(Ratio = Estimated / Correct)\n\nggplot(att2_est_vs_true, aes(x = Correct, y = Ratio, color = Item_Facet)) +\n  geom_hline(yintercept = 1, linetype = \"dashed\", color = \"gray40\") +\n  geom_point(alpha = 0.6) +\n  scale_y_log10() +  # log the ratio if you want to shrink large overestimates\n  labs(\n    title = \"Ratio of Estimated to True Value (Attari Part 2)\",\n    x = \"True Value\",\n    y = \"Estimated / True (Log Scale)\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\nDisplay codeatt2_split &lt;- att2_est_vs_true %&gt;%\n  mutate(HighVsLow = ifelse(Correct &gt; 300, \"High kWh Items\", \"Low kWh Items\"))\n\n# Plot them separately\nggplot(att2_split, aes(x = Correct, y = Estimated, color = Item_Facet)) +\n  geom_point(alpha = 0.6) +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\") +\n  facet_wrap(~ HighVsLow, scales = \"free\") +\n  labs(\n    title = \"Estimated vs. True Scores, Split by High vs. Low True Values\",\n    x = \"True Value\",\n    y = \"Estimated Value\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\nDisplay code# -------------------------------------------------------\n# 7. Plot Distribution of Absolute Error\n# -------------------------------------------------------\nabs_err_long &lt;- att2_scored %&gt;%\n  select(id, ends_with(\"_abs_error\")) %&gt;%\n  pivot_longer(\n    cols = -id,\n    names_to = \"Item\",\n    values_to = \"AbsError\"\n  ) %&gt;%\n  mutate(\n    # Strip off the \"_abs_error\" suffix to get the original item name\n    ItemName = sub(\"_abs_error$\", \"\", Item),\n    # Create a faceting label\n    Item_Facet = recode(ItemName, !!!item_labels)\n  )\n\nggplot(abs_err_long, aes(x = AbsError)) +\n  geom_histogram(binwidth = 100, fill = \"forestgreen\", color = \"white\") +\n  facet_wrap(~ Item_Facet, scales = \"free\") +\n  labs(\n    title = \"Distribution of Absolute Errors (Attari Part 2)\",\n    x = \"Absolute Error\",\n    y = \"Frequency\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\nDisplay code# -------------------------------------------------------\n# 8. Plot Distribution of Log-Transformed Absolute Error\n# -------------------------------------------------------\n# Because log(0) is undefined, remove zero errors; add small constant if desired\nabs_err_long_log &lt;- abs_err_long %&gt;%\n  filter(AbsError &gt; 0) %&gt;%\n  mutate(LogAbsError = log(AbsError))\n\nggplot(abs_err_long_log, aes(x = LogAbsError)) +\n  geom_histogram(binwidth = 0.5, fill = \"purple\", color = \"white\") +\n  facet_wrap(~ Item_Facet, scales = \"free\") +\n  labs(\n    title = \"Distribution of Log(Absolute Error)\",\n    x = \"Log(Absolute Error)\",\n    y = \"Frequency\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\nDisplay code# -------------------------------------------------------\n# 9. Correlations Among Part 2 Items (Raw or Error Scores)\n# -------------------------------------------------------\n# Example: correlation among raw usage items\nusage_cor &lt;- att2_combined %&gt;%\n  select(all_of(usage_items)) %&gt;%\n  cor(use = \"pairwise.complete.obs\")\n\ncorrplot::corrplot(usage_cor, method = \"number\", type = \"upper\", tl.col = \"black\", tl.srt = 45)\ntitle(\"Correlation Matrix: Raw Usage Estimates (ATT19–ATT27)\")\n\n\n\n\n\n\nDisplay code# Example: correlation among absolute error scores\nusage_abs_err_cor &lt;- att2_scored %&gt;%\n  select(ends_with(\"_abs_error\"), -contains(\"rel_error\")) %&gt;%\n  cor(use = \"pairwise.complete.obs\")\n\ncorrplot::corrplot(usage_abs_err_cor, method = \"number\", type = \"upper\", tl.col = \"black\", tl.srt = 45)\ntitle(\"Correlation Matrix: Usage Absolute Error Scores\")\n\n\n\n\n\n\nDisplay code# -------------------------------------------------------\n# 10. (Optional) Reliability Analyses\n# -------------------------------------------------------\n# Typically, these Part 2 items measure different concepts, but for demonstration:\npsych::alpha(att2_combined %&gt;% select(all_of(usage_items)), check.keys = TRUE)\n\n\nReliability analysis   \nCall: psych::alpha(x = att2_combined %&gt;% select(all_of(usage_items)), \n    check.keys = TRUE)\n\n  raw_alpha std.alpha G6(smc) average_r S/N    ase mean  sd median_r\n      0.79      0.88    0.94      0.44 7.1 0.0049 7496 779      0.4\n\n    95% confidence boundaries \n         lower alpha upper\nFeldt     0.76  0.79  0.82\nDuhachek  0.78  0.79  0.80\n\n Reliability if an item is dropped:\n       raw_alpha std.alpha G6(smc) average_r  S/N alpha se var.r med.r\nATT19-      0.81      0.91    0.96      0.57 10.4   0.0047 0.068  0.55\nATT20       0.80      0.87    0.92      0.45  6.6   0.0044 0.116  0.40\nATT21       0.80      0.86    0.93      0.44  6.3   0.0047 0.120  0.40\nATT22       0.80      0.87    0.94      0.46  6.9   0.0048 0.118  0.45\nATT23       0.74      0.85    0.93      0.41  5.5   0.0057 0.112  0.31\nATT24       0.75      0.84    0.92      0.40  5.4   0.0052 0.111  0.31\nATT25       0.70      0.85    0.91      0.41  5.5   0.0072 0.099  0.40\nATT26       0.82      0.85    0.92      0.42  5.9   0.0057 0.101  0.40\nATT27       0.70      0.85    0.92      0.42  5.8   0.0072 0.104  0.40\n\n Item statistics \n         n raw.r std.r r.cor r.drop  mean   sd\nATT19- 586 0.067  0.17 0.015  0.013 64921  377\nATT20  586 0.356  0.67 0.668  0.320   184  285\nATT21  586 0.439  0.72 0.710  0.415   138  199\nATT22  586 0.331  0.62 0.586  0.315   109  127\nATT23  586 0.881  0.86 0.847  0.851   359  792\nATT24  586 0.868  0.89 0.888  0.842   321  640\nATT25  586 0.978  0.86 0.879  0.968   396 1192\nATT26  586 0.963  0.79 0.800  0.885   682 3136\nATT27  586 0.924  0.80 0.801  0.884   353 1426\n\nDisplay codepsych::alpha(att2_combined %&gt;% select(all_of(savings_items)), check.keys = TRUE)\n\n\nReliability analysis   \nCall: psych::alpha(x = att2_combined %&gt;% select(all_of(savings_items)), \n    check.keys = TRUE)\n\n  raw_alpha std.alpha G6(smc) average_r S/N   ase mean  sd median_r\n      0.69      0.77    0.91      0.36 3.3 0.014  168 356     0.17\n\n    95% confidence boundaries \n         lower alpha upper\nFeldt     0.65  0.69  0.73\nDuhachek  0.66  0.69  0.72\n\n Reliability if an item is dropped:\n      raw_alpha std.alpha G6(smc) average_r S/N alpha se var.r med.r\nATT28      0.71      0.77    0.81      0.40 3.3    0.013 0.096  0.51\nATT29      0.71      0.78    0.82      0.41 3.5    0.013 0.087  0.51\nATT30      0.57      0.70    0.88      0.32 2.4    0.018 0.133  0.12\nATT31      0.61      0.75    0.92      0.38 3.0    0.017 0.135  0.15\nATT32      0.67      0.72    0.87      0.34 2.5    0.019 0.118  0.15\nATT33      0.61      0.68    0.82      0.30 2.1    0.018 0.107  0.15\n\n Item statistics \n        n raw.r std.r r.cor r.drop mean   sd\nATT28 586  0.30  0.58  0.59   0.19   77  250\nATT29 586  0.26  0.54  0.56   0.17   59  191\nATT30 586  0.79  0.77  0.72   0.68  283  496\nATT31 586  0.72  0.63  0.50   0.53  214  594\nATT32 586  0.89  0.73  0.69   0.63  228 1085\nATT33 586  0.90  0.83  0.83   0.87  146  258\n\n\nEnergy Literacy Survey (ELS01-ELS08)\n\n\nDescription: Assesses participants’ knowledge of energy concepts.\n\nCoding Scheme: Multiple-choice questions.\n\nSpecific Items:\n\nELS01: Units of electrical energy (correct answer: 2 = “Kilowatt-hours (kWh)”)\nELS02: Energy consumption of appliance (correct answer: 3 = “Multiplied by the time it’s used”)\nELS03: Energy conversion in incandescent bulb (correct answer: 3 = “Electrical energy to radiant energy (light) and thermal energy (heat)”)\nELS04: Best reason to buy an Energy Star appliance (correct answer: 3 = “ENERGY STAR appliances use less energy”)\nELS05: Most energy used in average American home (correct answer: 3 = “Heating and cooling rooms”)\nELS06: Most electricity used in average home (correct answer: 2 = “Refrigerator”)\nELS07: Source of most electricity in the US (correct answer: 3 = “Burning coal”)\nELS08: Problem with switching to electric cars (correct answer: 1 = “Most electricity is currently produced from fossil fuels (coal, oil, natural gas)”)\n\n\n\nhead(els1) |&gt; kable() | id| ELS01| ELS02| ELS03| ELS04| ELS05| ELS06| ELS07| ELS08| |–:|—–:|—–:|—–:|—–:|—–:|—–:|—–:|—–:| | 1| 2| 3| 3| 6| 3| 2| 5| 1| | 2| 1| 1| 3| 3| 3| 2| 4| 1| | 3| 3| 3| 4| 3| 3| 5| 3| 5| | 4| 1| 6| 6| 3| 3| 5| 1| 5| | 5| 1| 3| 4| 4| 2| 2| 5| 1| | 6| 1| 1| 3| 3| 3| 2| 3| 5|\n\nDisplay codeels &lt;- bind_rows(els1,els2)\n\nels &lt;- els |&gt; \n  pivot_longer(cols = ELS01:ELS08, names_to = \"question\", values_to = \"response\") |&gt; \n  # Convert response to numeric to avoid label issues\n  mutate(response = as.numeric(response)) |&gt;\n  mutate(question = case_when(\n    question == \"ELS01\" ~ \"Electrical energy units (kWh)\",\n    question == \"ELS02\" ~ \"Energy consumed and appliance power rating\",\n    question == \"ELS03\" ~ \"Incandescent lightbulb conversion\",\n    question == \"ELS04\" ~ \"Reason to buy energy star appliances\",\n    question == \"ELS05\" ~ \"Which appliances uses the most energy\",\n    question == \"ELS06\" ~ \"Which appliance uses the most electricity\",\n    question == \"ELS07\" ~ \"Which source provides most electricity in the US\",\n    question == \"ELS08\" ~ \"Problem with electric cars\",\n    TRUE ~ NA_character_\n  )) |&gt; \n  mutate(correct = case_when(\n    question == \"Electrical energy units (kWh)\" & response == 2 ~ \"Correct\",\n    question == \"Energy consumed and appliance power rating\" & response == 3 ~ \"Correct\",\n    question == \"Incandescent lightbulb conversion\" & response == 3 ~ \"Correct\",\n    question == \"Reason to buy energy star appliances\" & response == 3 ~ \"Correct\",\n    question == \"Which appliances uses the most energy\" & response == 3 ~ \"Correct\",\n    question == \"Which appliance uses the most electricity\" & response == 2 ~ \"Correct\",\n    question == \"Which source provides most electricity in the US\" & response == 3 ~ \"Correct\",\n    question == \"Problem with electric cars\" & response == 1 ~ \"Correct\",\n    TRUE ~ \"Incorrect\"\n  ))\n\n\nggplot(els, aes(x = as.factor(response), fill = correct)) +\n  geom_bar(position = \"dodge\") +\n  facet_wrap(~question, ncol = 2, scales = \"free_x\") + # Facet by question, 2 columns, free x-axis scales\n  scale_fill_manual(values = c(\"Correct\" = \"#00ba38\", \"Incorrect\" = \"#f8766d\")) + # Custom colors\n  labs(\n    title = \"Distribution of Answers to Energy Literacy Survey Questions\",\n    subtitle = \"DeWaters & Powers (2011)\",\n    x = \"Response Option\",\n    y = \"Number of Respondents\",\n    fill = \"Correctness\"\n  ) +\n  theme_bw() + # Use a clean theme\n  theme(\n    strip.text = element_text(size = 10, face = \"bold\"), # Adjust facet label appearance\n    axis.text.x = element_text(size = 8, angle = 45, hjust = 1), # Rotate x-axis labels for readability\n    axis.text.y = element_text(size = 8),\n    axis.title = element_text(size = 10),\n    plot.title = element_text(size = 12, face = \"bold\"),\n    plot.subtitle = element_text(size = 10),\n    legend.position = \"bottom\", # Move legend to the bottom\n    legend.title = element_text(size = 10),\n    legend.text = element_text(size = 9)\n  )\n\n\n\n\n\n\nDisplay codeels_summary &lt;- els %&gt;%\n  group_by(question) %&gt;%\n  summarize(\n    total_n = n(),\n    n_correct = sum(correct == \"Correct\", na.rm = TRUE),\n    pct_correct = mean(correct == \"Correct\", na.rm = TRUE) * 100\n  ) %&gt;%\n  arrange(desc(pct_correct))\n\n# Print summary table\nels_summary |&gt; kable()\n\n\n\n\n\n\n\n\n\nquestion\ntotal_n\nn_correct\npct_correct\n\n\n\nReason to buy energy star appliances\n586\n505\n86\n\n\nWhich appliances uses the most energy\n586\n398\n68\n\n\nProblem with electric cars\n586\n364\n62\n\n\nWhich appliance uses the most electricity\n586\n345\n59\n\n\nElectrical energy units (kWh)\n586\n312\n53\n\n\nIncandescent lightbulb conversion\n586\n300\n51\n\n\nEnergy consumed and appliance power rating\n586\n249\n42\n\n\nWhich source provides most electricity in the US\n586\n235\n40\n\n\n\n\nDisplay codeggplot(els_summary, aes(x = reorder(question, pct_correct), y = pct_correct)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  coord_flip() +  # flips axes for better label readability\n  labs(\n    title = \"Proportion Correct by ELS Item\",\n    x = \"Item (Reordered by Difficulty)\",\n    y = \"Percent Correct\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\nDisplay code# Convert \"Correct\"/\"Incorrect\" to numeric 1/0\nels_score_df &lt;- els %&gt;%\n  mutate(is_correct = ifelse(correct == \"Correct\", 1, 0)) %&gt;%\n  group_by(id) %&gt;%\n  summarize(\n    # Number correct across 8 items\n    ELS_Total_Score = sum(is_correct, na.rm = TRUE)\n  )\n\n# Look at distribution of total scores\nels_score_df %&gt;%\n  count(ELS_Total_Score) %&gt;%\n  arrange(ELS_Total_Score)\n\n# A tibble: 9 × 2\n  ELS_Total_Score     n\n            &lt;dbl&gt; &lt;int&gt;\n1               0     9\n2               1    14\n3               2    64\n4               3    81\n5               4   108\n6               5   105\n7               6    99\n8               7    76\n9               8    30\n\nDisplay codeggplot(els_score_df, aes(x = ELS_Total_Score)) +\n  geom_histogram(binwidth = 1, fill = \"tan\", color = \"black\") +\n  scale_x_continuous(breaks = 0:8) +\n  labs(\n    title = \"Distribution of ELS Total Scores\",\n    x = \"Total Correct (0–8)\",\n    y = \"Number of Respondents\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\nDisplay code# Using wide format: each row is a participant, each col is an item coded 1=correct, 0=incorrect\nels_wide_binary &lt;- els %&gt;%\n  mutate(is_correct = ifelse(correct == \"Correct\", 1, 0)) %&gt;%\n  select(id, question, is_correct) %&gt;%\n  pivot_wider(names_from = \"question\", values_from = \"is_correct\")\n\n# Convert to numeric matrix for alpha\nels_matrix &lt;- els_wide_binary %&gt;%\n  select(-id) %&gt;%\n  as.data.frame()\n\npsych::alpha(els_matrix, check.keys = TRUE)\n\n\nReliability analysis   \nCall: psych::alpha(x = els_matrix, check.keys = TRUE)\n\n  raw_alpha std.alpha G6(smc) average_r S/N   ase mean   sd median_r\n      0.55      0.56    0.55      0.14 1.3 0.028 0.58 0.23     0.16\n\n    95% confidence boundaries \n         lower alpha upper\nFeldt      0.5  0.55  0.61\nDuhachek   0.5  0.55  0.61\n\n Reliability if an item is dropped:\n                                                 raw_alpha std.alpha G6(smc)\nElectrical energy units (kWh)                         0.51      0.52    0.50\nEnergy consumed and appliance power rating            0.51      0.52    0.50\nIncandescent lightbulb conversion                     0.53      0.54    0.52\nReason to buy energy star appliances                  0.51      0.51    0.49\nWhich appliances uses the most energy                 0.54      0.55    0.52\nWhich appliance uses the most electricity             0.56      0.57    0.54\nWhich source provides most electricity in the US      0.52      0.53    0.51\nProblem with electric cars                            0.47      0.48    0.45\n                                                 average_r  S/N alpha se  var.r\nElectrical energy units (kWh)                         0.13 1.08    0.031 0.0071\nEnergy consumed and appliance power rating            0.13 1.09    0.030 0.0060\nIncandescent lightbulb conversion                     0.14 1.17    0.030 0.0053\nReason to buy energy star appliances                  0.13 1.06    0.031 0.0051\nWhich appliances uses the most energy                 0.15 1.21    0.029 0.0045\nWhich appliance uses the most electricity             0.16 1.30    0.028 0.0047\nWhich source provides most electricity in the US      0.14 1.14    0.030 0.0063\nProblem with electric cars                            0.11 0.91    0.033 0.0044\n                                                 med.r\nElectrical energy units (kWh)                     0.15\nEnergy consumed and appliance power rating        0.16\nIncandescent lightbulb conversion                 0.16\nReason to buy energy star appliances              0.16\nWhich appliances uses the most energy             0.16\nWhich appliance uses the most electricity         0.16\nWhich source provides most electricity in the US  0.16\nProblem with electric cars                        0.13\n\n Item statistics \n                                                   n raw.r std.r r.cor r.drop\nElectrical energy units (kWh)                    586  0.53  0.52  0.39   0.30\nEnergy consumed and appliance power rating       586  0.52  0.51  0.38   0.28\nIncandescent lightbulb conversion                586  0.49  0.46  0.32   0.24\nReason to buy energy star appliances             586  0.47  0.53  0.42   0.31\nWhich appliances uses the most energy            586  0.44  0.45  0.29   0.20\nWhich appliance uses the most electricity        586  0.41  0.39  0.21   0.15\nWhich source provides most electricity in the US 586  0.49  0.48  0.34   0.26\nProblem with electric cars                       586  0.62  0.62  0.56   0.41\n                                                 mean   sd\nElectrical energy units (kWh)                    0.53 0.50\nEnergy consumed and appliance power rating       0.42 0.49\nIncandescent lightbulb conversion                0.51 0.50\nReason to buy energy star appliances             0.86 0.35\nWhich appliances uses the most energy            0.68 0.47\nWhich appliance uses the most electricity        0.59 0.49\nWhich source provides most electricity in the US 0.40 0.49\nProblem with electric cars                       0.62 0.49\n\nNon missing response frequency for each item\n                                                    0    1 miss\nElectrical energy units (kWh)                    0.47 0.53    0\nEnergy consumed and appliance power rating       0.58 0.42    0\nIncandescent lightbulb conversion                0.49 0.51    0\nReason to buy energy star appliances             0.14 0.86    0\nWhich appliances uses the most energy            0.32 0.68    0\nWhich appliance uses the most electricity        0.41 0.59    0\nWhich source provides most electricity in the US 0.60 0.40    0\nProblem with electric cars                       0.38 0.62    0\n\n\nResidential Energy Consumption Survey (RECS01-RECS16)\n\n\nDescription: Gathers information about the household’s energy use and equipment.\n\nCoding Scheme: Mixed, with multiple-choice and open-ended responses.\n\nSpecific Items:\n\nRECS01: Number of light bulbs in the residence (coding: 6 point ordinal)\nRECS02: How household controls main heating equipment (coding: 6 point ordinal)\nRECS03: How household maintains heating equipment (text entry if RECS02 = “Other”)\nRECS04: How household controls central AC (coding: 6 point ordinal)\nRECS05: How household maintains central air equipment (text entry if RECS04= “Other”)\nRECS06: Do you use individual AC (coding: 3 point ordinal)\nRECS07: Number of window/wall/portable AC units (coding: numeric)\nRECS08: Age of most used window/wall/portable AC unit (coding: 7 point ordinal)\nRECS09: How household controls individual AC (coding: 6 point ordinal)\nRECS10: How household maintains individual AC (text entry if RECS09 = “other”)\nRECS11: Number of light bulbs used 4 hours per day (coding: numeric)\nRECS12: Portion of lightbulbs in use daily (coding: 4 point ordinal)\nRECS13: Portion of lightbulbs that are incandescent (coding: 6 point ordinal)\nRECS14: Portion of lightbulbs that are CFLs (coding: 6 point ordinal)\nRECS15: Portion of lightbulbs that are LEDs (coding: 6 point ordinal)\nRECS16: Lights controlled by timers or dimmers? (coding: 3 point ordinal)\nRECS17: Second heating source (coding: 6 point ordinal)\n\n\n\n\nDisplay codehead(recs1)\n\n# A tibble: 6 × 17\n     id RECS01      RECS02  RECS03 RECS04  RECS05 RECS06  RECS07 RECS08  RECS09 \n  &lt;int&gt; &lt;dbl+lbl&gt;   &lt;dbl+l&gt; &lt;chr&gt;  &lt;dbl+l&gt; &lt;chr&gt;  &lt;dbl+l&gt; &lt;chr&gt;  &lt;dbl+l&gt; &lt;dbl+l&gt;\n1     1 1 [Fewer t… 1 [Set… \"\"     4 [Tur… \"\"     1 [Yes] 2      3 [5 t… 4 [Tur…\n2     2 3 [40 to 5… 3 [Pro… \"\"     2 [Man… \"\"     2 [No]  0      7 [Don… 6 [Oth…\n3     3 3 [40 to 5… 4 [Tur… \"\"     3 [Pro… \"\"     2 [No]  10     4 [10 … 5 [Our…\n4     4 1 [Fewer t… 4 [Tur… \"\"     4 [Tur… \"\"     2 [No]  0      7 [Don… 6 [Oth…\n5     5 2 [20 to 3… 3 [Pro… \"\"     3 [Pro… \"\"     3 [Don… 5      2 [2 t… 3 [Pro…\n6     6 1 [Fewer t… 2 [Man… \"\"     2 [Man… \"\"     1 [Yes] 1      4 [10 … 2 [Man…\n# ℹ 7 more variables: RECS10 &lt;chr&gt;, RECS11 &lt;chr&gt;, RECS12 &lt;dbl+lbl&gt;,\n#   RECS13 &lt;dbl+lbl&gt;, RECS14 &lt;dbl+lbl&gt;, RECS15 &lt;dbl+lbl&gt;, RECS16 &lt;dbl+lbl&gt;"
  }
]