



```{r}
pacman::p_load(dplyr,purrr,tidyr,here, haven,tibble,ggplot2,ggh4x,lme4,knitr,kableExtra,gt,pander,flextable,ggh4x,psych,corrplot)
options(digits=2, scipen=999, dplyr.summarise.inform=FALSE)

draw <- readRDS(here("data","draw.rds"))
dinst <- readRDS(here("data","dinst.rds"))


# Attari Energy Survey (Part 1)
aes1 <- draw |> select(id,ATT01:ATT18)
aes2 <- dinst |> select(id,ATT01:ATT18)
aes_combined <- bind_rows(aes1, aes2)


att_useSave <- draw |> select(id,ATT19:ATT33)
att_useSave2 <- dinst |> select(id,ATT19:ATT33)
att2_combined <- bind_rows(att_useSave, att_useSave2)


els1 <- draw |> select(id,ELS01:ELS08)
els2 <- dinst |> select(id,ELS01:ELS08)
els <- bind_rows(els1,els2)


recs1 <- draw |> select(id,RECS01:RECS16)
recs2 <- dinst |> select(id,RECS01:RECS16)
recs <- bind_rows(recs1,recs2)


lss1_1 <- draw |> select(id,LAN01:LAN09)
lss1_2 <- dinst |> select(id,LAN01:LAN09)
lss1 <- bind_rows(lss1_1,lss1_2)

lss2_1 <- draw |> select(id,LAN10:LAN87)
lss2_2 <- dinst |> select(id,LAN10:LAN87)
lss2 <- bind_rows(lss2_1,lss2_2)


nep1 <- draw |> select(id,NEP01:NEP15)
nep2 <- dinst |> select(id,NEP01:NEP15)
nep <- bind_rows(nep1,nep2)

demo1 <- draw |> select(id,DEM01:DEM30)
demo2 <- dinst |> select(id,DEM01:DEM30)
demo <- bind_rows(demo1,demo2)


rs1 <- draw |> select(id,RS01:RS06)
rs2 <- dinst |> select(id,RS01:RS06)
rs <- bind_rows(rs1,rs2)

```











# Attari Energy Survey (Part 1)

*   **A. Perceived Difficulty Items (ATT01-ATT15):**
    *   **Description:** Measures how easy or hard it would be for participants to make various changes related to energy usage. Items are phrased as actions such as buying a fuel-efficient car, or changing light bulbs.
    *   **Coding Scheme:**
        *   1 = "Do it already"
        *   2 = "Extremely easy"
        *   3 = "Very easy"
        *   4 = "Somewhat easy"
        *   5 = "Neither easy nor hard"
        *   6 = "Somewhat hard"
        *   7 = "Very hard"
        *   8 = "Extremely hard"
        *   9 = "Not applicable"
    *   **Specific Items:**
        *   ATT01: Buying a more fuel-efficient automobile
        *   ATT02: Carpooling with one other person to work
        *   ATT03: Replacing poorly insulated windows
        *   ATT04: Cutting highway speed
        *   ATT05: More efficient heating unit
        *   ATT06: Turning down the thermostat in the day and night
        *   ATT07: Turning up the thermostat on air conditioner in the summer
        *   ATT08: Tuning up the car twice a year
        *   ATT09: Replacing incandescent bulbs with CFLs
        *   ATT10: Turning up the refrigerator thermostat
        *   ATT11: Turning down the freezer thermostat
        *   ATT12: Drying clothes on a clothes line
        *   ATT13: Watching less TV
        *   ATT14: Installing a more efficient washer
        *   ATT15: Changing washer temperature settings
*   **B. Numeracy Questions (ATT16-ATT18):**

    *   **Description:** Measures numerical literacy through probability questions.
    *   **Coding Scheme:** Text box entry where participants are asked to enter numeric answers with no other text. Correct answers are below.
    *   **Specific Items:**
        *   ATT16: Probability of coin flips (correct answer: 500)
        *   ATT17: Probability of winning lottery (correct answer: 10)
        *   ATT18: Percentage of winning car sweepstakes (correct answer: 0.1%)

```{r}

analyze_attari_survey_part1 <- function(aes_combined) {
  # Correct answers for Numeracy Questions (ATT16-ATT18)
  correct_numeracy <- c(
    ATT16 = 500, ATT17 = 10, ATT18 = 0.1
  )
  
  # Function to calculate the relative score for numeracy items
  calculate_relative_score_numeracy <- function(response, correct) {
    if (is.na(response)) {
        return(NA)
    } else if (response > correct) {
      1 - (response - correct) / response
    } else {
      response / correct
    }
  }
  
  # Calculate perceived difficulty scores (average of ATT01-ATT15, excluding 9)
  difficulty_scores <- aes_combined %>%
    select(id, ATT01:ATT15) %>%
    pivot_longer(
      cols = ATT01:ATT15,
      names_to = "item",
      values_to = "response"
    ) %>%
    filter(response != 9) %>% # Exclude "Not applicable" responses
    group_by(id) %>%
    summarize(perceived_difficulty_score = mean(response, na.rm = TRUE))
  
  # Calculate numeracy scores
  numeracy_scores <- aes_combined %>%
    select(id, ATT16:ATT18) %>%
    pivot_longer(
      cols = ATT16:ATT18,
      names_to = "item",
      values_to = "response"
    ) %>%
    mutate(correct = correct_numeracy[item]) %>%
    mutate(relative_score = map2_dbl(response, correct, calculate_relative_score_numeracy)) %>%
    group_by(id) %>%
    summarize(numeracy_score = mean(relative_score, na.rm = TRUE))
  
  # Combine the scores into a single data frame
  final_scores <- full_join(difficulty_scores, numeracy_scores, by = "id")

    final_scores <- final_scores %>%
    mutate(
      perceived_difficulty_score = scale(perceived_difficulty_score),
      numeracy_score = scale(numeracy_score)
    )
  
  return(final_scores)
}

# Example usage:
attari_part1_scores <- analyze_attari_survey_part1(aes_combined)
head(attari_part1_scores)

# histogram of attari_pd_n (1 liner plot)
#ggplot(attari1_scores, aes(attari_pd_n)) + geom_histogram(binwidth = 1) 

attari1_scores |> head() |> pander::pandoc.table(caption="Attari Part 1")

cor(attari_part1_scores$perceived_difficulty_score, attari_part1_scores$numeracy_score, use="pairwise.complete.obs")


```





# Attari Energy Survey (Part 2)

*   **A. Relative Energy Usage (ATT19-ATT27):**
    *   **Description:** Asks participants to estimate the relative energy usage of various devices compared to a 100-Watt bulb.
    *   **Coding Scheme:** Numeric entry. Correct answers are indicated in codebook but these can be any response between 0-200.
    *   **Specific Items:**
        *   ATT19: Compact fluorescent light bulb (correct answer: 27)
        *   ATT20: Desktop computer (correct answer: 140)
        *   ATT21: Laptop computer (correct answer: 48)
        *   ATT22: Stereo (correct answer: 128)
        *   ATT23: Electric clothing dryer (correct answer: 3400)
        *   ATT24: Portable heater (correct answer: 925)
        *   ATT25: Air conditioning unit for a room (correct answer: 1000)
        *   ATT26: Central air conditioning unit (correct answer: 3500)
        *   ATT27: Dishwasher (correct answer: 3400)
*   **B. Relative Energy Savings (ATT28-ATT33):**
    *   **Description:** Asks participants to estimate the relative energy savings of various actions compared to turning off a 100-Watt bulb.
    *   **Coding Scheme:** Numeric entry. Correct answers are indicated in codebook but these can be any response between 0-200.
    *   **Specific Items:**
        *   ATT28: Replacing 100-Watt bulb with CFL (correct answer: 1800)
        *   ATT29: Replacing 100-watt kitchen bulb with 75-watt bulb (correct answer: 25)
        *   ATT30: Drying clothes on a clothesline (correct answer: 3400)
        *   ATT31: Raising summer air conditioner by 5 F (correct answer: 115)
        *   ATT32: Lowering winter heater by 5 F (correct answer: 546)
        *    ATT33: Changing washer temp settings (correct answer: 4000)

```{r}


analyze_attari_survey <- function(att2_combined) {
  # Correct answers for Relative Energy Usage (ATT19-ATT27)
  correct_usage <- c(
    ATT19 = 27, ATT20 = 140, ATT21 = 48, ATT22 = 128, ATT23 = 3400,
    ATT24 = 925, ATT25 = 1000, ATT26 = 3500, ATT27 = 3400
  )
  
  # Correct answers for Relative Energy Savings (ATT28-ATT33)
  correct_savings <- c(
    ATT28 = 1800, ATT29 = 25, ATT30 = 3400, ATT31 = 115, ATT32 = 546, ATT33 = 4000
  )
  
  # Function to calculate the relative score for each item
  calculate_relative_score <- function(response, correct) {
    if (response > correct) {
      1 - (response - correct) / response
    } else {
      response / correct
    }
  }
  
  # Calculate relative energy usage scores
  usage_scores <- att2_combined %>%
    select(id, ATT19:ATT27) %>%
    pivot_longer(
      cols = ATT19:ATT27,
      names_to = "item",
      values_to = "response"
    ) %>%
    mutate(correct = correct_usage[item]) %>%
    mutate(relative_score = map2_dbl(response, correct, calculate_relative_score)) %>%
    group_by(id) %>%
    summarize(relative_energy_use_score = mean(relative_score, na.rm = TRUE))
  
  # Calculate relative energy savings scores
  savings_scores <- att2_combined %>%
    select(id, ATT28:ATT33) %>%
    pivot_longer(
      cols = ATT28:ATT33,
      names_to = "item",
      values_to = "response"
    ) %>%
    mutate(correct = correct_savings[item]) %>%
    mutate(relative_score = map2_dbl(response, correct, calculate_relative_score)) %>%
    group_by(id) %>%
    summarize(relative_energy_save_score = mean(relative_score, na.rm = TRUE))
  
  # Combine the scores into a single data frame
  final_scores <- full_join(usage_scores, savings_scores, by = "id")
   # Standardize the scores
  final_scores <- final_scores %>%
    mutate(
      relative_energy_use_score = scale(relative_energy_use_score),
      relative_energy_save_score = scale(relative_energy_save_score)
    )
  
  return(final_scores)
}

# Example usage with the provided data:
attari2_scores <- analyze_attari_survey(att2_combined)

cor(attari2_scores$relative_energy_use_score, attari2_scores$relative_energy_save_score, use="pairwise.complete.obs")
ggplot(attari2_scores, aes(x = relative_energy_use_score, y = relative_energy_save_score)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "Relative Energy Usage Score", y = "Relative Energy Savings Score") +
  theme_minimal()

head(attari2_scores) |> pander::pandoc.table(caption="Attari Part 2",split.table=Inf)




```





```{r}


score_els <- function(df, id_col = "id") {
  
  # If your data is in WIDE format: ELS01, ELS02, ..., ELS08
  # define correct answers:
  correct_answers <- c(
    ELS01 = 2,
    ELS02 = 3,
    ELS03 = 3,
    ELS04 = 3,
    ELS05 = 3,
    ELS06 = 2,
    ELS07 = 3,
    ELS08 = 1
  )
  
  # Create indicator of correctness for each item
  df_scored <- df %>%
    mutate(
      ELS01_correct = ifelse(ELS01 == correct_answers["ELS01"], 1, 0),
      ELS02_correct = ifelse(ELS02 == correct_answers["ELS02"], 1, 0),
      ELS03_correct = ifelse(ELS03 == correct_answers["ELS03"], 1, 0),
      ELS04_correct = ifelse(ELS04 == correct_answers["ELS04"], 1, 0),
      ELS05_correct = ifelse(ELS05 == correct_answers["ELS05"], 1, 0),
      ELS06_correct = ifelse(ELS06 == correct_answers["ELS06"], 1, 0),
      ELS07_correct = ifelse(ELS07 == correct_answers["ELS07"], 1, 0),
      ELS08_correct = ifelse(ELS08 == correct_answers["ELS08"], 1, 0),
      els_total_correct = ELS01_correct + ELS02_correct + ELS03_correct + ELS04_correct +
                          ELS05_correct + ELS06_correct + ELS07_correct + ELS08_correct
    ) %>%
    select(all_of(id_col), els_total_correct)
  
  return(df_scored)
}


# 3) Energy Literacy Survey scores
els_scores <- score_els(els, id_col = "id")  # or whichever final wide ELS object you have


```